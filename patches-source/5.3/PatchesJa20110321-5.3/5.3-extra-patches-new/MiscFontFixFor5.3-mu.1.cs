'From Squeak5.3 of 28 May 2021 [latest update: #19459] on 7 November 2021 at 10:04:43 pm'!"Change Set:		MiscFontFixFor4.1-MUDate:			7 November 2021Author:			Masashi UmezawaMisc font bug fixes for Squeak 5.3"!!StrikeFont methodsFor: 'accessing' stamp: 'mu 4/22/2010 23:29'!widthOf: aCharacter 	"Answer the width of the argument as a character in the receiver."	| code map |	code := aCharacter charCode.	map := self characterToGlyphMap.	(map notNil and: [map size > code]) ifTrue: [		code := map at: code + 1 ].	((code < minAscii or: [maxAscii < code]) 		or: [(xTable at: code + 1) < 0])			ifTrue: [^(FixedFaceFont new errorFont fontSize: self height) widthOf: aCharacter].	^ (xTable at: code + 2) - (xTable at: code + 1)! !!TTFileDescription methodsFor: 'glyphs' stamp: 'mu 4/24/2010 18:45'!glyphAt: charOrCode	"Answer the glyph with the given code point"	| codePoint glyph |	codePoint := charOrCode asCharacter charCode.	self withFileDo:[:fontFile| | glyphIndex |		glyphIndex := self readCmapTableAt: codePoint fromFile: fontFile.		glyph := self readGlyphAt: glyphIndex fromFile: fontFile.		self updateGlyphMetrics: glyph fromFile: fontFile.	].	glyph ifNil: [		(TTFontDescription classPool at: #Descriptions) detect: [:each | (glyph := (each at: charOrCode)) notNil] ifNone:[]	].	^glyph! !!TTFileDescription methodsFor: 'ttf tables' stamp: 'mu 11/7/2021 22:04'!processNamingTable: fontFile"copyright         CHARPTR     The font's copyright notice.familyName        CHARPTR     The font's family name.subfamilyName     CHARPTR     The font's subfamily name.uniqueName        CHARPTR     A unique identifier for this font.fullName          CHARPTR     The font's full name (a combination of                                          familyName and subfamilyName).versionName       CHARPTR     The font's version string."	| nRecords initialOffset storageOffset format |	initialOffset := fontFile position.	format := fontFile nextNumber: 2.	format = 0 ifFalse: [self error: 'Cannot handle format 1 naming tables'].	"Get the number of name records"	nRecords := fontFile nextNumber: 2.	"Offset from the beginning of this table"	storageOffset := (fontFile nextNumber: 2) + initialOffset.	1 to: nRecords do:[:i| |  pID sID lID nID length offset string |		fontFile position: initialOffset + 6 + ((i-1) * 12).		pID := fontFile nextNumber: 2.		sID := fontFile nextNumber: 2.		lID := fontFile nextNumber: 2.		nID := fontFile nextNumber: 2.		length := fontFile nextNumber: 2.		offset := fontFile nextNumber: 2.		"Read only Macintosh or Microsoft strings"		(pID = 1 or:[pID = 3 and:[sID = 1]]) ifTrue:[			"MS uses Unicode all others single byte"			"multiBytes := pID = 3."			fontFile position: storageOffset+offset.			string := (fontFile next: length) asString.			pID = 3 ifTrue:[				string := string convertFromEncoding: #utf16.			].			"Select only English names, prefer Macintosh"			((pID = 1 and: [lID = 0]) or: [pID = 3 and: [lID = 16r0409]]) ifTrue: [				nID caseOf: {					[0] -> [(pID = 1 or:[copyright == nil]) ifTrue:[copyright := string]].					[1] -> [familyName == nil ifTrue:[familyName := string]].					[2] -> [subfamilyName == nil ifTrue:[subfamilyName := string]].					"[3] -> [(pID = 1 or:[uniqueName == nil]) ifTrue:[uniqueName := string]]."					"[4] -> [(pID = 1 or:[fullName == nil]) ifTrue:[fullName := string]]."					"[5] -> [(pID = 1 or:[versionName == nil]) ifTrue:[versionName := string]]."					"[6] -> [(pID = 1 or:[postscriptName == ni]) ifTrue:[postscriptName := string]]."					"[7] -> [(pID = 1 or:[trademark == nil]) ifTrue:[trademark := string]]."				} otherwise:["ignore"].			]		].	].! !