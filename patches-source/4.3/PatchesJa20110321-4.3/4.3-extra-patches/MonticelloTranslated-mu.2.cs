'From Squeak4.3 of 22 December 2011 [latest update: #11860] on 15 July 2012 at 3:02:30 pm'!!MCTool methodsFor: 'morphic ui' stamp: 'mu 4/25/2010 00:03'!buttonRow: specArray	| aRow |	aRow := AlignmentMorph newRow.	aRow 		color: (Display depth <= 8 ifTrue: [Color transparent] ifFalse: [Color gray alpha: 0.2]);		borderWidth: 0.	aRow hResizing: #spaceFill; vResizing: #spaceFill; rubberBandCells: true.	aRow clipSubmorphs: true.	aRow layoutInset:2@2; cellInset: 1; color: Color white.	aRow wrapCentering: #center; cellPositioning: #leftCenter.	specArray do:		[:triplet | | aButton state |			state := triplet at: 4 ifAbsent: [#buttonState].			aButton := PluggableButtonMorph				on: self				getState: state				action: #performButtonAction:enabled:.			aButton				hResizing: #spaceFill;				vResizing: #spaceFill;				label: triplet first asString translated;				arguments: (Array with: triplet second with: state); 				onColor: Color white offColor: Color white.			aRow addMorphBack: aButton.			aButton setBalloonText: triplet third].	^ aRow! !!MCTool methodsFor: 'morphic ui' stamp: 'mu 7/15/2012 15:01'!fillMenu: aMenu fromSpecs: anArray	anArray do:		[:spec |		aMenu add: spec first translated target: self selector: spec second argumentList: (spec allButFirst: 2)].	^ aMenu! !!MCToolWindowBuilder methodsFor: 'as yet unclassified' stamp: 'mu 4/25/2010 00:04'!buttonRow: specArray	| panel |	panel := builder pluggablePanelSpec new.	panel children: OrderedCollection new.	specArray do:		[:spec | | button |				button := builder pluggableButtonSpec new.		button model: tool.		button label: spec first asString translated.		button action: spec second.		button help: spec third.		button enabled: (spec at: 4 ifAbsent: [#buttonEnabled]).		button state: (spec at: 5 ifAbsent: [#buttonSelected]).		panel children add: button].	panel layout: #horizontal.	panel frame: currentFrame.	window children add: panel! !!MCWorkingCopyBrowser methodsFor: 'morphic ui' stamp: 'mu 7/15/2012 15:02'!repositoryListMenu: aMenu	self repository ifNil: [^ aMenu].	self fillMenu: aMenu fromSpecs:		#(('open repository' #openRepository)		    ('edit repository info' #editRepository)		   ('add to package...' #addRepositoryToPackage)		   ('remove repository' #removeRepository)			   ('load repositories' #loadRepositories)			   ('save repositories' #saveRepositories)		   ('flush cached versions' #flushAllCaches)			   ('copy image versions here' #copyImageVersions)		).		aMenu		add: (self repository alwaysStoreDiffs					ifTrue: ['store full versions']					ifFalse: ['store diffs']) translated		target: self		selector: #toggleDiffs.	^ aMenu				! !